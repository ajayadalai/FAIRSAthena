<Application x:Class="ANDE.FAIRS.Athena.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:tk="http://schemas.microsoft.com/wpf/2008/toolkit"
             xmlns:local="clr-namespace:ANDE.FAIRS.Athena"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ControlTemplate x:Key="FrameTemplate" TargetType="Frame">
            <ContentPresenter />
        </ControlTemplate>
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="IsEnabled" Value="True"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="#8246AF"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" Name="border">
                            <ContentPresenter x:Name="MyContentPresenter" 
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true"/>
                            <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                                <Setter Property="BorderThickness" TargetName="border" Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="#000000"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- View Model-->
        <!-- Logo -->
        <Style x:Key="LogoImage" TargetType="Image">
            <Setter Property="Source" Value="Images/fair_logo.png"></Setter>
            <Setter Property="Width" Value="100"></Setter>
        </Style>

        <Style x:Key="TextBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="#777777"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>
            <Setter Property="FontSize" Value="14"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
        </Style>

        <Style x:Key="InformationTextBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="#777777"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>
            <Setter Property="FontSize" Value="14"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
        </Style>

        <!-- labels styles -->
        <Style x:Key="HeaderLabel" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>
            <Setter Property="FontSize" Value="18"></Setter>
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
        </Style>

        <Style x:Key="SubHeaderLabel" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="10,0,0,0"></Setter>
        </Style>

        <Style x:Key="ControlLabel" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>
            <Setter Property="FontSize" Value="12"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="10,0,0,0"></Setter>
        </Style>

        <Style x:Key="ControlLabelBlack" TargetType="{x:Type Label}" BasedOn="{StaticResource ControlLabel}">
            <Setter Property="Foreground" Value="Black"/>
        </Style>

        <!-- Color for Buttons -->
        <Style TargetType="Button" x:Key="MyButton2">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="MediumAquamarine" />
            <Setter Property="Foreground" Value="MediumBlue" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="MyContentPresenter" 
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="Green"/>
                    <Setter Property="Foreground" Value="DeepPink"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="RoundedCorner" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="Transparent"></Setter>
            <Setter Property="CornerRadius" Value="5"></Setter>
            <Setter Property="Background" Value="#8246AF"></Setter>
            <!--<Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,0.5" StartPoint="0.5,1">
                        <GradientStop Color="#8246AF" Offset="0.9"/>
                        <GradientStop Color="Black"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>-->
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" ShadowDepth="2" Direction="270" Opacity="0.4"></DropShadowEffect>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#bdbdbd"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ButtonBlueChrome" TargetType="{x:Type Button}">
            <Setter Property="IsEnabled" Value="True"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="Height" Value="50"></Setter>
            <Setter Property="Width" Value="150"></Setter>
            <Setter Property="FontSize" Value="14"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" Name="border">
                            <ContentPresenter x:Name="MyContentPresenter" 
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true"/>
                            <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                                <Setter Property="BorderThickness" TargetName="border" Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="#000000"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"></Setter>
                </Trigger>
            </Style.Triggers>
            <!--<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                            <Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" SnapsToDevicePixels="true" Fill="#8246AF" BorderBrush="{TemplateBinding BorderBrush}" RenderDefaulted="{TemplateBinding IsDefaulted}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" ThemeColor="NormalColor">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                            </Microsoft_Windows_Themes:ButtonChrome>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true"/>
                            <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Black"/>                                
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>-->
        </Style>

        <Style x:Key="PagingButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBlueChrome}">
            <Setter Property="FontSize" Value="10"></Setter>
            <Setter Property="Height" Value="20"></Setter>
            <Setter Property="Width" Value="30"></Setter>
        </Style>

        <Style x:Key="LinkButton" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="Blue"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="FontSize" Value="12"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <TextBlock TextDecorations="Underline"> 
                            <ContentPresenter />
                        </TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="datePickerStyle" TargetType="{x:Type DatePicker}">
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="SelectedDate" Value="{x:Static sys:DateTime.Now}"/>
            <Setter Property="SelectedDateFormat" Value="Short"></Setter>
            <Setter Property="Background" Value="White"></Setter>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="TextBlock.FontFamily" Value="Segoe UI"/>
            <Setter Property="TextBlock.FontWeight" Value="Normal"/>
            <Setter Property="TextBlock.FontStyle" Value="Normal"/>
            <Setter Property="TextBlock.FontSize" Value="12"/>
            <Setter Property="TextBlock.TextAlignment" Value="Left"/>
            <Setter Property="TextBlock.VerticalAlignment" Value="Center"></Setter>
            <Setter Property="TextBlock.LineHeight" Value="24"/>

        </Style>

        <!--Style for the months of a year button, and years of a decade button.-->
        <Style x:Key="calendarButtonStyle" TargetType="{x:Type CalendarButton}">
            <Setter Property="Width" Value="70" />
            <Setter Property="Height" Value="48" />
            <Setter Property="FontFamily" Value="Seoge UI"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontStyle" Value="Normal"/>
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Background" Value="#E7E7E8"/>
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CalendarButton}">
                        <Grid>
                            <Rectangle  x:Name="activeButton"
                                RadiusX="5" RadiusY="5" 
                                Fill="{TemplateBinding Panel.Background}" 
                                Stroke="Transparent"
                                StrokeThickness="1" 
                                Opacity="255">
                            </Rectangle>
                            <ContentPresenter 
                                Content="{TemplateBinding ContentControl.Content}" 
                                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
                                ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" 
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" 
                                TextElement.Foreground="{TemplateBinding Foreground}"
                                Margin="0,8,0,0">
                            </ContentPresenter>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsInactive" Value="True">
                                <Setter Property="Background" Value="#bdbdbd"></Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#8246AF"></Setter>
                                <Setter Property="Foreground" Value="White"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Style for CalendarDayButton-->
        <Style x:Key="calendarDayButtonStyle" TargetType="{x:Type CalendarDayButton}">
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="FontFamily" Value="Seoge UI"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontStyle" Value="Normal"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CalendarDayButton}">
                        <Grid>
                            <Rectangle x:Name="activeButton"
                                RadiusX="5" RadiusY="5" 
                                Fill="{TemplateBinding Panel.Background}" 
                                Stroke="Transparent"
                                StrokeThickness="1" 
                                Opacity="1">
                            </Rectangle>
                            <ContentPresenter 
                                Content="{TemplateBinding ContentControl.Content}" 
                                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
                                ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"                   
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                TextElement.Foreground="{TemplateBinding Foreground}" Margin="0,8,0,0">
                            </ContentPresenter>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsToday" Value="True">
                                <Setter Property="Background" Value="#8246AF"></Setter>
                                <Setter Property="Foreground" Value="White"></Setter>
                            </Trigger>
                            <Trigger Property="IsInactive" Value="True">
                                <Setter Property="Background" Value="#bdbdbd"></Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#8246AF"></Setter>
                                <Setter Property="Foreground" Value="White"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Style for CalendarItem-->
        <Style x:Key="itemStyle" TargetType="{x:Type CalendarItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CalendarItem">
                        <Border BorderThickness="2">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#494747" Offset="0"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Grid>
                                <Grid.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#E7E7E8" Offset="0"/>
                                    </LinearGradientBrush>
                                </Grid.Background>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="35"></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Border Background="#494747" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3"></Border>
                                <Border HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="0" Grid.Column="0"
                                    Style="{StaticResource RoundedCorner}" Height="30">
                                    <Button x:Name="PART_PreviousButton" 
                                        FontSize="28"
                                        FontWeight="Normal"
                                        Content="&lt;"
                                        Width="24"
                                        Focusable="False" Style="{StaticResource ButtonBlueChrome}"
                                        VerticalAlignment="Center" Margin="0,0,0,5"/>
                                </Border>
                                <Border HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="0" Grid.Column="1"
                                    Style="{StaticResource RoundedCorner}">
                                    <Button x:Name="PART_HeaderButton"                                          
                                        FontFamily="Seoge UI"
                                        FontSize="18"
                                        FontWeight="Normal"
                                        Height="30"
                                        Focusable="False"
                                        Style="{StaticResource ButtonBlueChrome}"
                                        Foreground="White">
                                    </Button>
                                </Border>
                                <Border HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Row="0" Grid.Column="2"
                                    Style="{StaticResource RoundedCorner}" Height="30">
                                    <Button x:Name="PART_NextButton" 
                                        FontSize="28"
                                        FontWeight="Normal"
                                        Content="&gt;" 
                                        Width="24"
                                        Focusable="False" Style="{StaticResource ButtonBlueChrome}"
                                        VerticalAlignment="Center" Margin="0,0,0,5" />
                                </Border>
                                <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3">
                                    <Grid x:Name="PART_MonthView" Visibility="Visible">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                    </Grid>

                                    <Grid x:Name="PART_YearView"  Visibility="Hidden">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                    </Grid>
                                </Grid>
                                <Rectangle x:Name="PART_DisabledVisual" Opacity="0" Visibility="Collapsed" Fill="#A5FFFFFF"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="PART_DisabledVisual" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Calendar}}, Path=DisplayMode}" Value="Year">
                                <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Calendar}}, Path=DisplayMode}" Value="Decade">
                                <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Style for Calendar-->
        <Style x:Key="calendarStyle" TargetType="{x:Type Calendar}">
            <Setter Property="CalendarDayButtonStyle" Value="{DynamicResource calendarDayButtonStyle}"/>
            <Setter Property="CalendarButtonStyle" Value="{DynamicResource calendarButtonStyle}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Calendar">
                        <StackPanel Name="PART_Root"   Orientation="Horizontal">
                            <CalendarItem 
                                Name="PART_CalendarItem" 
                                Style="{DynamicResource itemStyle}"
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                VerticalAlignment="Center" />
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Machine Button Styles-->
        <Style x:Key="MachineButton" TargetType="{x:Type Button}">
            <!--<Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="BorderBrush" Value="Transparent"></Setter>-->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Settings Buttons-->
        <Style x:Key="SettingsButtons" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" Name="border">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>
        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">#FF7381F9</Color>
        <Color x:Key="ControlDarkColor">#FF211AA9</Color>


        <LinearGradientBrush x:Key="MenuPopupBrush"
                       EndPoint="0.5,1"
                       StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"
                  Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}"
                  Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}"
                  Offset="1" />
        </LinearGradientBrush>

        <!--Dropdown Menu Style-->
        <Style TargetType="{x:Type ContextMenu}" x:Key="MenuStyle">
            <Setter Property="SnapsToDevicePixels"
            Value="True" />
            <Setter Property="OverridesDefaultStyle"
            Value="True" />
            <Setter Property="Grid.IsSharedSizeScope"
            Value="true" />
            <Setter Property="HasDropShadow"
            Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border x:Name="Border"
                  Background="White"
                  BorderThickness="1">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource BorderMediumColor}" />
                            </Border.BorderBrush>
                            <StackPanel IsItemsHost="True"
                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow"
                     Value="true">
                                <Setter TargetName="Border"
                      Property="Padding"
                      Value="0,3,0,3" />
                                <Setter TargetName="Border"
                      Property="CornerRadius"
                      Value="0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="separatorStyle" TargetType="{x:Type Separator}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
            <Setter Property="Margin" Value="0,2,0,2"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Border 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        Height="1" 
                        SnapsToDevicePixels="true"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Color for LayoutGrid -->
        <Style x:Key="LayoutGrid" TargetType="{x:Type Grid}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#E7E7E8" Offset="0"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Checkbox Style-->
        <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border" 
                                       Width="13" 
                                       Height="13" 
                                       CornerRadius="0" 
                                       Background="#8246AF"
                                       BorderThickness="1"
                                       BorderBrush="#8246AF">
                                    <Grid>
                                        <Path Width="7" Height="7" 
                                        x:Name="CheckMark"
                                        SnapsToDevicePixels="False" 
                                        Stroke="#FFFFFF"
                                        StrokeThickness="2"
                                        Data="F1 M 0.468732,4.66838L 3.03345,7.95443L 7.28127,0.420569" />
                                        <Rectangle Name="IndeterminateMark"
                                           Fill="#8246AF" Stroke="White" StrokeThickness="1"
                                           Width="9" Height="9"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Visibility="Hidden" />
                                    </Grid>
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              RecognizesAccessKey="True"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                                <Setter TargetName="Border" Property="Background" Value="#FFFFFF" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="IndeterminateMark" Property="Visibility" Value="Visible" />
                                <Setter TargetName="Border" Property="Background" Value="White" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#808080" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#606060" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background" Value="#AAAAAA" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<Style TargetType="CheckBox">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Background" Value="#666666" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Border Background="#8246AF"
                                Width="13"
                                Height="13">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="BorderBrush" Value="Aquamarine"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="BorderBrush" Value="#FFFFFF" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#ffff00"/>
                    <Setter Property="BorderBrush" Value="Aquamarine"/>
                </Trigger>
            </Style.Triggers>
        </Style>-->

        <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
            <Setter Property="CornerRadius" Value="0" />
        </Style>

        <!--New-->
        <!-- Fill Brushes -->

        <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#AAA" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="0.1"/>
                    <GradientStop Color="#EEE" Offset="0.9"/>
                    <GradientStop Color="#FFF" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />

        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />

        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />

        <!-- Border Brushes -->

        <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#CCC" Offset="0.0"/>
                    <GradientStop Color="#444" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#CCC" Offset="0.0"/>
                    <GradientStop Color="#444" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#777" Offset="0.0"/>
                    <GradientStop Color="#000" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#444" Offset="0.0"/>
                    <GradientStop Color="#888" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

        <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />

        <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />

        <!-- Miscellaneous Brushes -->
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

        <SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />
        <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
       TargetType="Separator">
            <Setter Property="Height" Value="1"/>
            <Setter Property="Margin" Value="0,4,0,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Separator">
                        <Border BorderBrush="{StaticResource SolidBorderBrush}"
                BorderThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="GeneralStyle" TargetType="{x:Type Control}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Foreground" Value="#424141" />
            <Setter Property="Background" Value="Transparent">
            </Setter>
        </Style>

        <Style x:Key="TextBoxSubHeaderStyle" TargetType="{x:Type TextBox}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="10,0,0,0"></Setter>
        </Style>

        <Style x:Key="PasswordBoxStyle" TargetType="{x:Type PasswordBox}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="10,0,0,0"></Setter>
        </Style>

        <Style x:Key="AuthenticationLabel" TargetType="{x:Type Label}" BasedOn="{StaticResource ControlLabel}">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="14"></Setter>
        </Style>

        <Style x:Key="ErrorLabel" TargetType="{x:Type Label}" BasedOn="{StaticResource ControlLabel}">
            <Setter Property="Foreground" Value="Red" />
            <Setter Property="FontFamily" Value="Seoge UI" />
            <Setter Property="FontSize" Value="12" />
        </Style>

        <Style x:Key="BtnStyle" TargetType="Button" BasedOn="{StaticResource GeneralStyle}" >
            <Setter Property="Width" Value="150" />
            <Setter Property="Height" Value="35" />
            <Setter Property="Margin" Value="10,10,0,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"
                                BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                            </ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.8" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RadioButtonControl" TargetType="{x:Type RadioButton}" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="Transparent" Cursor="Hand">
                            <BulletDecorator.Bullet>
                                <Grid Height="16" Width="16">
                                    <!--Define size of the Bullet-->
                                    <!--The two borders-->
                                    <Image Name="NonSelected" Source="View/Images/bullet.png" Height="20" Width="20" Stretch="None"></Image>
                                    <Image Name="Selected" Source="View/Images/bullet_point.png" Height="20" Width="20" Stretch="None" Visibility="Hidden"></Image>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <!--Text element-->
                            <Label Margin="5,0" Style="{StaticResource ControlLabel}" Foreground="Black">
                                <TextBlock>
                                <ContentPresenter />
                                </TextBlock>
                            </Label>
                        </BulletDecorator>
                        <!--If item is checked, trigger the visibility of the mark-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <!--If item is checked, trigger the visibility of the mark and change the color of the selected bullet into a darker gray for better highlighting-->
                                <Setter TargetName="Selected" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="NonSelected" Property="Visibility" Value="Hidden" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Menu Style-->
        <Style x:Key="MenuItemBtnStyle" TargetType="MenuItem" BasedOn="{StaticResource GeneralStyle}" >
            <Setter Property="Width" Value="160" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Padding" Value="20,0,0,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuItem">
                        <Border Name="border" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"
                                BorderThickness="0" CornerRadius="2" >
                            <ContentPresenter HorizontalAlignment="Left" Margin="25,0,0,0" VerticalAlignment="Center" ContentSource="Header">
                            </ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#424141" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#424141" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ContextMenu}">
            <!--<Setter Property="Background" Value="{StaticResource ShadeBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource ShadeBrush}" />-->
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Margin" Value="20,0,0,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="2*"></RowDefinition>
                                <RowDefinition Height="8*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Image Grid.Row="0" Source="View/Images/arrow.png" Height="30" Width="30" HorizontalAlignment="Right" Margin="0,0,22,-15"></Image>
                            <Border Uid="Border_93" Grid.Row="1">
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="Tag" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>
                                        <Style.Triggers>
                                            <DataTrigger 
                            Binding="{Binding Tag, 
                                RelativeSource={RelativeSource Self}}" 
                            Value="True">
                                                <Setter Property="Background" 
                            Value="Transparent"/>
                                                <Setter Property="Padding" 
                            Value="0,0,0,5"/>
                                                <Setter Property="Effect">
                                                    <Setter.Value>
                                                        <DropShadowEffect 
                                                            BlurRadius="2" 
                                                            Opacity="0.2"   
                                                            ShadowDepth="2"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Border BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Background="{TemplateBinding Background}" 
                Uid="Border_50" CornerRadius="2">
                                    <ScrollViewer CanContentScroll="True" 
                Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, 
                        TypeInTargetAssembly={x:Type FrameworkElement}}}" 
                        Uid="ScrollViewer_9">
                                        <ItemsPresenter 
                    KeyboardNavigation.DirectionalNavigation="Cycle" 
                    Margin="{TemplateBinding Padding}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                    Uid="ItemsPresenter_5"/>
                                    </ScrollViewer>
                                </Border>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SwitchContextMenu" TargetType="{x:Type ContextMenu}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Margin" Value="20,0,0,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="8*"></RowDefinition>
                                <RowDefinition Height="2*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Border Uid="Border_93" Grid.Row="0" VerticalAlignment="Bottom" Panel.ZIndex="3">
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="Tag" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="True">
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="Padding" Value="0,5,0,0"/>
                                                <Setter Property="Effect">
                                                    <Setter.Value>
                                                        <DropShadowEffect BlurRadius="2" Opacity="0.2" ShadowDepth="2"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                        Uid="Border_50" CornerRadius="2">
                                    <ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" Uid="ScrollViewer_9">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ItemsPresenter_5"/>
                                    </ScrollViewer>
                                </Border>
                            </Border>
                            <Image Grid.Row="1" Source="View/Images/arrow_down.png" StretchDirection="Both" Height="30" Width="30" HorizontalAlignment="Right" Margin="0,-15,22,0"></Image>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Flat Combobox style-->
        <!-- Flat ComboBox -->
        <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
        <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
        <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
        <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

                <Path Name="Arrow" Grid.Column="1" 
            Data="M 0 0 L 6 6 L 12 0 Z"
            HorizontalAlignment="Center" Fill="#444"
            VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="Black"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--start-->
        <!--resolved selection issue of combo box-->
        <Style x:Key="ComboBoxFlatSelectionStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            <Setter Property="TextElement.Foreground" Value="Black" />
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="ItemContainerStyle" Value="{DynamicResource CustomItemContainerStyle }"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton
                            Name="ToggleButton"
                            Grid.Column="2"
                            ClickMode="Press"
                            Focusable="False"
                            IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                            Template="{StaticResource ComboBoxToggleButtonTemplate}" />

                            <ContentPresenter
                            Name="ContentSite"
                            Margin="5,3,23,3"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="False" />
                            <TextBox
                            Name="PART_EditableTextBox"
                            Margin="3,3,23,3"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Background="Transparent"
                            Focusable="True"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            Visibility="Hidden" BorderBrush="Transparent" BorderThickness="0" >
                                <!--<TextBox.Template>
                                    <ControlTemplate TargetType="TextBox">
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>-->
                            </TextBox>
                            <!--  Popup showing items  -->

                            <Popup
                            Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">
                                <Grid
                                Name="DropDown"
                                MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                SnapsToDevicePixels="True">
                                    <Border
                                    Name="DropDownBorder"
                                    Margin="0,1,0,0"
                                    Background="White"
                                    BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"
                                    BorderThickness="1,1,1,1"
                                    CornerRadius="0" />
                                    <ScrollViewer
                                    Margin="4"
                                    SnapsToDevicePixels="True"
                                    Template="{DynamicResource CustomScrollViewerControlTemplate}">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="95" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}" />
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                                <Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible" />
                                <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




        <!--end-->


        <Style x:Key="ListViewStyle">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="Black"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Border SnapsToDevicePixels="true" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    Background="{TemplateBinding Background}"
                    CornerRadius="5" x:Name="border">
                            <ContentControl 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                    Margin="2,2,2,2" 
                    VerticalAlignment="Stretch"
                    Content="{TemplateBinding Content}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush  x:Key="BlueRinseBrush"
                        EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF223B84" Offset="1"/>
            <GradientStop Color="#FF57A0F4" Offset="0.5"/>
            <GradientStop Color="#FF4B94EC" Offset="0.5"/>
        </LinearGradientBrush>


        <Style x:Key="GridViewColumnHeaderGripper"
         TargetType="Thumb">
            <Setter Property="Width" Value="18"/>
            <Setter Property="Background" Value="Gray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Padding="{TemplateBinding Padding}"
                          Background="Transparent">
                            <Rectangle HorizontalAlignment="Center"
                                 Width="1"
                          Fill="{TemplateBinding Background}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="GridViewColumnHeader">
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="BorderBrush" Value="Transparent"></Setter>
            <Setter Property="Background" Value="White"></Setter>
            <Setter Property="Foreground" Value="#221f21"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>
            <Setter Property="FontSize" Value="12"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
            <Setter Property="TextBlock.TextAlignment" Value="Center"></Setter>
            <Setter Property="TextBlock.Padding" Value="10,0,10,0"></Setter>
            <!--<Setter Property="Padding" Value="10"></Setter>-->
            <Setter Property="TextBlock.VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate
              TargetType="GridViewColumnHeader">
                        <Grid>
                            <Border Name="HeaderBorder"
                              BorderThickness="0"
                              BorderBrush="{TemplateBinding BorderBrush}"      
                              Background="{TemplateBinding Background}"
                              Padding="2,0,2,0">
                                <ContentPresenter Name="HeaderContent"
                          TextElement.Foreground="#221f21"
                                               TextElement.FontSize="12"
                                               TextElement.FontFamily="Segoe UI"
                                               
                          Margin="0,0,0,1"
                          VerticalAlignment="{TemplateBinding
                          VerticalContentAlignment}"
                          HorizontalAlignment="{TemplateBinding
                          HorizontalContentAlignment}"
                          RecognizesAccessKey="True"
                          SnapsToDevicePixels=
                          "{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <Thumb x:Name="PART_HeaderGripper"
                          HorizontalAlignment="Right"
                          Margin="0,0,-9,0"
                          Style="{StaticResource
                          GridViewColumnHeaderGripper}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type tk:DataGridColumnHeader}">
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="Background" Value="White"></Setter>
            <Setter Property="Foreground" Value="#221f21"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>
            <Setter Property="FontSize" Value="12"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate
              TargetType="{x:Type tk:DataGridColumnHeader}">
                        <Grid>
                            <Border Name="HeaderBorder"
                              BorderThickness="0"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              Background="{TemplateBinding Background}"
                              Padding="2,0,2,0">
                                <ContentPresenter Name="HeaderContent"
                          TextElement.Foreground="#221f21"
                                               TextElement.FontSize="12"
                                               TextElement.FontFamily="Segoe UI"
                                               
                          Margin="0,0,0,1"
                          VerticalAlignment="{TemplateBinding
                          VerticalContentAlignment}"
                          HorizontalAlignment="{TemplateBinding
                          HorizontalContentAlignment}"
                          RecognizesAccessKey="True"
                          SnapsToDevicePixels=
                          "{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <Thumb x:Name="PART_HeaderGripper"
                          HorizontalAlignment="Right"
                          Margin="0,0,-8,0"
                          Style="{StaticResource
                          GridViewColumnHeaderGripper}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="cellStyle" TargetType="{x:Type tk:DataGridCell}">
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type tk:DataGridCell}">
                        <Border BorderThickness="0">
                            <Border x:Name="border"
                              BorderThickness="0,0,0,0">
                                <ContentPresenter />
                            </Border>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TooltipPopupStyle" TargetType="Popup">
            <Style.Triggers>
                <DataTrigger Binding="{Binding PlacementTarget.Value, RelativeSource={RelativeSource Self}}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard x:Name="OpenPopupStoryBoard" >
                            <Storyboard x:Name="openStoryBoard">
                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" FillBehavior="HoldEnd">
                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0.25" Value="True"/>
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <PauseStoryboard BeginStoryboardName="OpenPopupStoryBoard"/>
                        <BeginStoryboard x:Name="ClosePopupStoryBoard">
                            <Storyboard>
                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" FillBehavior="HoldEnd">
                                    <DiscreteBooleanKeyFrame KeyTime="0:0:1" Value="False"/>
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>

                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <PauseStoryboard BeginStoryboardName="ClosePopupStoryBoard" />
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <PauseStoryboard BeginStoryboardName="OpenPopupStoryBoard"/>
                        <ResumeStoryboard BeginStoryboardName="ClosePopupStoryBoard" />
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="WatermarkTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="10,0,0,0"></Setter>
        </Style>

        <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border" 
                                       Width="16" 
                                       Height="16" 
                                       CornerRadius="0" 
                                       Background="#8246AF"
                                       BorderThickness="1"
                                       BorderBrush="#8246AF">
                                    <Grid>
                                        <Path Width="7" Height="7" 
                                        x:Name="CheckMark"
                                        SnapsToDevicePixels="False" 
                                        Stroke="#FFFFFF"
                                        StrokeThickness="0"
                                        Data="F1 M 0.468732,4.66838L 3.03345,7.95443L 7.28127,0.420569" />
                                        <Rectangle Name="IndeterminateMark"
                                           Fill="#8246AF" Stroke="White" StrokeThickness="1"
                                           Width="9" Height="9"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Visibility="Hidden" />
                                    </Grid>
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              RecognizesAccessKey="True"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                                <Setter TargetName="Border" Property="Background" Value="#FFFFFF" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="IndeterminateMark" Property="Visibility" Value="Visible" />
                                <Setter TargetName="Border" Property="Background" Value="White" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#808080" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#606060" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background" Value="#AAAAAA" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
